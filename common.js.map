{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;AAE2D;AAGA;;;;AAOpD,MAAM,qBAAqB;IAGhC,YAAoB,IAAiB,EAC3B,SAA0B;QADhB,SAAI,GAAJ,IAAI,CAAa;QAC3B,cAAS,GAAT,SAAS,CAAiB;IAC9B,CAAC;IAET,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAC;QACxC,MAAM,IAAI,GAAQ,MAAM,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAS,MAAM,CAAC,MAAM,CAAE,UAAU,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;gBACnB,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;aAC9D;SACF;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,iFAA+B,GAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK;QACH,8DAA8D;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,wEAAsB,CAAC,CAAC;IAChD,CAAC;IAED,YAAY;QACR,OAAQ,6EAAmB,GAAE,gFAAsB,GAAI,2EAAyB,CAAC;IACrF,CAAC;IAED,YAAY;QACR,OAAQ,6EAAmB,GAAE,gFAAsB,GAAG,2EAAyB,CAAC;IACpF,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,0EAAwB,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,uEAAqB,CAAC,CAAC;IACjD,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,oFAAkC,GAAG,MAAM,GAAE,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,uEAAqB,CAAC,CAAC;IAC/C,CAAC;IAED,OAAO,CAAC,IAAI;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,sEAAoB,EAAC,IAAI,CAAC,CAAC;IACpD,CAAC;;0FAlDY,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM","sources":["./src/app/core/service/time-management/time-management.service.ts"],"sourcesContent":["\r\nimport { FunctionService } from 'src/app/core/helper/function.helper.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { of } from 'rxjs';\r\nimport { timeChart } from './../../mock/time-entry';\r\nimport { ApiEndpoints } from './../../constants/constants';\r\nimport { HttpService } from './../common/http.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable ({\r\n  providedIn: 'root'\r\n})\r\nexport class TimeManagementService {\r\n\r\n\r\n  constructor(private http: HttpService,\r\n    private _function: FunctionService\r\n    ) { }\r\n\r\ngrid(gridParams = { q: '', offset: 0, limit: 10}) {\r\n        const keys: any = Object.keys (gridParams);\r\n        const value: any =  Object.values (gridParams);\r\n          let query = '?';\r\n          for (let i = 0; i < keys.length; i++) {\r\n            if (value[i] !== '') {\r\n              query += keys[i] + '=' + encodeURIComponent (value[i]) + '&';\r\n            }\r\n          }\r\n       return this.http.get (ApiEndpoints.timeManagementGrid+ query);\r\n      }\r\n\r\n      chart(){\r\n        // return of ({ timesheet: timeChart.timesheet ,status: 200 })\r\n        return this.http.get (ApiEndpoints.timeChart);\r\n      }\r\n\r\n      timeEntryXls() {\r\n          return  environment.baseUrl+ environment.apiVersion +  ApiEndpoints.timeEntryXls;\r\n      }\r\n\r\n      timeEntryCsv() {\r\n          return  environment.baseUrl+ environment.apiVersion + ApiEndpoints.timeEntryCsv;\r\n      }\r\n\r\n      projectList() {\r\n        return this.http.get (ApiEndpoints.projectList);\r\n    }\r\n\r\n    taskList() {\r\n      return this.http.get (ApiEndpoints.taskList);\r\n  }\r\n\r\n  timeDetails(id) {\r\n    return this.http.get (ApiEndpoints.timeManagementDetails + '?id='+ id);\r\n}\r\n\r\nuserList(){\r\n  return this.http.get (ApiEndpoints.userList);\r\n}\r\n\r\napprove(data) {\r\n  return this.http.post (ApiEndpoints.approve,data);\r\n}\r\n    }\r\n\r\n"],"names":[],"sourceRoot":"webpack:///"}