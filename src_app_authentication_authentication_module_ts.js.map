{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentication/404/not-found.component.ts","./src/app/authentication/404/not-found.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.routing.ts","./src/app/authentication/create-password/create-password.component.ts","./src/app/authentication/create-password/create-password.component.html","./src/app/authentication/lock/lock.component.ts","./src/app/authentication/lock/lock.component.html"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component ({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotfoundComponent implements AfterViewInit {\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"error-box\">\r\n    <div class=\"error-body text-center\">\r\n        <h1 class=\"error-title text-danger\">404</h1>\r\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\r\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \r\n    </div>\r\n</div>","import { ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from './../core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { LockComponent } from './lock/lock.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { AuthenticationRoutes } from './authentication.routing';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { CreatePasswordComponent } from './create-password/create-password.component';\r\n\r\n@NgModule ({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild (AuthenticationRoutes),\r\n    NgbModule,\r\n    CoreModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    LockComponent,\r\n    LogoutComponent,\r\n    CreatePasswordComponent\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { LockComponent } from './lock/lock.component';\r\n\r\nexport const AuthenticationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '404',\r\n        component: NotfoundComponent\r\n      },\r\n      {\r\n        path: 'lock',\r\n        component: LockComponent\r\n      },\r\n\r\n    ]\r\n  }\r\n];\r\n","import { FunctionService } from 'src/app/core/helper/function.helper.service';\r\nimport { StorageService } from 'src/app/core/helper/storage.service';\r\nimport { passwordTypeUrl, CreatePasswordConstants } from './../../core/constants/constants';\r\nimport { ToastService } from 'src/app/core/helper/toast.helper.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from 'src/app/core/service/login/login.service';\r\nimport { SubSink } from 'subsink';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ValidationruleService } from 'src/app/core/helper/validationrule.service';\r\nimport {ApiStatus, login } from 'src/app/core/constants/constants';\r\n\r\n@Component ({\r\n  selector: 'app-create-password',\r\n  templateUrl: './create-password.component.html',\r\n  styleUrls: ['./create-password.component.scss'],\r\n})\r\n\r\nexport class CreatePasswordComponent implements OnInit , OnDestroy {\r\n\r\n  public passwordForm!: FormGroup;\r\n\r\n  public submitted = false;\r\n\r\n  public loading = false;\r\n\r\n  public title =  CreatePasswordConstants.loading;\r\n\r\n  public tokenValidation!: boolean;\r\n\r\n  public tokenError!: string;\r\n\r\n  public apiCall = true;\r\n\r\n  public passwordMustHaveAMinimumOf = CreatePasswordConstants.passwordMustHaveAMinimumOf;\r\n\r\n  public confirmPasswordParameters: ValidationData[] = [{\r\n    id: CreatePasswordConstants.mustMatch,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordMustMatch\r\n  }\r\n  ];\r\n\r\n  public passwordParameters: ValidationData[] = [{\r\n    id: CreatePasswordConstants.minimumLength,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordMinimumLength\r\n  }, {\r\n    id: CreatePasswordConstants.upperCase,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordMinimumOneUpperCase\r\n  }, {\r\n    id: CreatePasswordConstants.lowerCase,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordMinimumOneLowerCase\r\n  }, {\r\n    id: CreatePasswordConstants.number,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordMinimumOneNumber\r\n  }, {\r\n    id: CreatePasswordConstants.specialCharacter,\r\n    value: false,\r\n    message: CreatePasswordConstants.passwordOneSpecialCharacter\r\n  }\r\n  ];\r\n\r\n  public confirmPasswordClicked = false;\r\n\r\n  public passwordClicked = false;\r\n\r\n  private subs = new SubSink ();\r\n\r\n  private token!: string;\r\n\r\n  private passwordType!: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private rule: ValidationruleService,\r\n    private _login: LoginService,\r\n    private _activated: ActivatedRoute,\r\n    private _toast: ToastService,\r\n    private _storage: StorageService,\r\n    private _helper: FunctionService,\r\n  ) {\r\n\r\n  }\r\n\r\nngOnInit(): void {\r\n    this.tokenValidation = true;\r\n    this._helper.deleteCookie ().then (v => {\r\n      this._storage.clearLocalStorage ();\r\n    });\r\n    this.setPasswordForm ();\r\n    this.getIdFromUrl ();\r\n  }\r\n\r\n  getIdFromUrl() {\r\n    this.subs.add (\r\n      this._activated.params.subscribe (\r\n        (params) => {\r\n          this.passwordType = params[CreatePasswordConstants.type];\r\n          if (   this.passwordType !==  passwordTypeUrl.userReset && this.passwordType !==  passwordTypeUrl.userActivate && this.passwordType !==  passwordTypeUrl.clientActivate && this.passwordType !==  passwordTypeUrl.clientReactivate) {\r\n            this._login.forceLogoutPasswordCreate ();\r\n        }\r\n          this.token = params[CreatePasswordConstants.id];\r\n          if (this.passwordType === passwordTypeUrl.userReset ) {\r\n            this.subs.add (\r\n              this._login.resetTokenVerification (this.token).subscribe ((res : any) => {\r\n               this.apiCall = false;\r\n                if (res.status === ApiStatus.ok) {\r\n                  this.title = CreatePasswordConstants.resetUserPassword;\r\n                  this.tokenValidation = false;\r\n                } else {\r\n                  this.tokenValidation = true;\r\n                  this.tokenError = res?.message;\r\n                  this.title = CreatePasswordConstants.error;\r\n                }\r\n              })\r\n            );\r\n           } else {\r\n           this.subs.add (\r\n            this._login.tokenVerification (this.token).subscribe ((res : any) => {\r\n             this.apiCall = false;\r\n              if (res.status === ApiStatus.ok) {\r\n                if (CreatePasswordConstants.failed === res.token_status) {\r\n                 this.tokenValidation = true;\r\n                  this.tokenError = res?.message;\r\n                  this.title = CreatePasswordConstants.error;\r\n                } else {\r\n                  this.tokenValidation = false;\r\n                  if (this.passwordType === passwordTypeUrl.clientActivate) {\r\n                   this.title = CreatePasswordConstants.CreateNewClientPassword;\r\n}\r\n                  if (this.passwordType === passwordTypeUrl.userActivate) {\r\n                    this.title = CreatePasswordConstants.CreateNewUserPassword;\r\n}\r\n                   if (this.passwordType === passwordTypeUrl.clientReactivate) {\r\n                    this.title = CreatePasswordConstants.CreateNewPassword;\r\n                   }\r\n                }\r\n              }\r\n            })\r\n          );\r\n           }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  login() {\r\n    this._login.forceLogoutPasswordCreate ();\r\n  }\r\n\r\n  /**\r\n   * @description To check the Password compatibility w.r.t standard pattern\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   */\r\n  checkPasswordCompatibility(passwordType: string) {\r\n    if (CreatePasswordConstants.password === passwordType ) {\r\n      this.confirmPasswordClicked = false;\r\n    } else {\r\n      this.confirmPasswordClicked = true;\r\n    }\r\n    const password = this.f.password.value;\r\n    this.passwordParameters.map ((element, i) => {\r\n      switch (element.id) {\r\n        case CreatePasswordConstants.minimumLength:\r\n          element.value = this.rule.minimumPasswordLength (password);\r\n          break;\r\n        case CreatePasswordConstants.upperCase:\r\n          element.value = this.rule.upperCaseValidator (password);\r\n          break;\r\n        case CreatePasswordConstants.lowerCase:\r\n          element.value = this.rule.lowerCaseValidator (password);\r\n          break;\r\n        case CreatePasswordConstants.number:\r\n          element.value = this.rule.numberValidator (password);\r\n          break;\r\n        case CreatePasswordConstants.specialCharacter:\r\n          element.value = this.rule.specialCharacterValidator (password);\r\n          break;\r\n      }\r\n    });\r\n    this.checkConfirmPasswordCompatibility ();\r\n  }\r\n\r\n/**\r\n   * @description To check the Confirm Password compatibility w.r.t standard pattern\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   */\r\n  checkConfirmPasswordCompatibility() {\r\n    this.passwordClicked = false;\r\n    const confirmPassword = this.f.confirmPassword.value;\r\n    const password = this.f.password.value;\r\n    this.confirmPasswordParameters.map ((element, i) => {\r\n      switch (element.id) {\r\n        case CreatePasswordConstants.mustMatch:\r\n          if (password === confirmPassword && confirmPassword !== '' ) {\r\n            element.value = true;\r\n          } else {\r\n            element.value = false;\r\n            this.passwordClicked = true;\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    this.passwordParameters.map ((element) => {\r\n      if (!element.value) {\r\n        this.passwordClicked = true;\r\n      }\r\n    });\r\n  }\r\n\r\n/**\r\n   * @description To initialize the password form\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   */\r\n  setPasswordForm() {\r\n    this.passwordForm = this.formBuilder.group ({\r\n      password: ['', this.rule.enhancedPasswordValidation],\r\n      confirmPassword: ['', this.rule.enhancedPasswordValidation]\r\n    }, {\r\n      validator: this.rule.passwordsMatch (CreatePasswordConstants.password, CreatePasswordConstants.confirmPassword)\r\n    });\r\n  }\r\n\r\n/**\r\n   * @description To fetch the form controls\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   * @readonly\r\n   */\r\n  get f() {\r\n    return this.passwordForm.controls;\r\n  }\r\n\r\n/**\r\n   * @description To finalize password\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   * @returns {*}\r\n   */\r\n  setPassword() {\r\n    this.submitted = true;\r\n    this.loading = true;\r\n    if (this.passwordForm.invalid) {\r\n      return;\r\n    }\r\n      const password = new FormData ();\r\n      password.append (login.password , this.passwordForm.value.password);\r\n      password.append (login.confirmPassword , this.passwordForm.value.confirmPassword);\r\n      password.append (login.token , this.token);\r\n      if ( this.passwordType === passwordTypeUrl.clientReactivate) {\r\n      this.subs.add (\r\n        this._login.reactivateClientPassword (password).subscribe ((res : any) => {\r\n          this.loading = false;\r\n          if (res.status === ApiStatus.ok) {\r\n            if (res.warning === true) {\r\n            this._toast.warning (res.message);\r\n            } else {\r\n            this._toast.success (res.message);\r\n            this._login.forceLogoutPasswordCreate ();\r\n            }\r\n          } else {\r\n            this.title = CreatePasswordConstants.error;\r\n            this.tokenValidation = true;\r\n            if (res[CreatePasswordConstants.message]) {\r\n              this.tokenError = res[CreatePasswordConstants.message];\r\n           } else if (res[CreatePasswordConstants.msg]) {\r\n            this.tokenError = res[CreatePasswordConstants.msg];\r\n           }\r\n          }\r\n        })\r\n      );\r\n      }\r\n      if (this.passwordType === passwordTypeUrl.clientActivate ) {\r\n      this.subs.add (\r\n        this._login.activateClientPassword (password).subscribe ((res : any) => {\r\n          this.loading = false;\r\n          if (res.status === ApiStatus.ok) {\r\n            if (res.warning === true) {\r\n            this._toast.warning (res.message);\r\n            } else {\r\n            this._toast.success (res.message);\r\n            this._login.forceLogoutPasswordCreate ();\r\n            }\r\n          } else {\r\n            this.title = CreatePasswordConstants.error;\r\n            this.tokenValidation = true;\r\n            if (res[CreatePasswordConstants.message]) {\r\n              this.tokenError = res[CreatePasswordConstants.message];\r\n           } else if (res[CreatePasswordConstants.msg]) {\r\n            this.tokenError = res[CreatePasswordConstants.msg];\r\n           }\r\n          }\r\n        })\r\n      );\r\n      }\r\n      if (this.passwordType === passwordTypeUrl.userReset ) {\r\n        this.subs.add (\r\n          this._login.resetUserPassword (password).subscribe ((res : any) => {\r\n            this.loading = false;\r\n            if (res.status === ApiStatus.ok) {\r\n              if (res.warning === true) {\r\n              this._toast.warning (res.message);\r\n              } else {\r\n              this._toast.success (res.message);\r\n              this._login.forceLogoutPasswordCreate ();\r\n              }\r\n            } else {\r\n              this.title = CreatePasswordConstants.error;\r\n              this.tokenValidation = true;\r\n              if (res[CreatePasswordConstants.message]) {\r\n                this.tokenError = res[CreatePasswordConstants.message];\r\n             } else if (res[CreatePasswordConstants.msg]) {\r\n              this.tokenError = res[CreatePasswordConstants.msg];\r\n             }\r\n            }\r\n          })\r\n        );\r\n        }\r\n      if ( this.passwordType === passwordTypeUrl.userActivate) {\r\n      this.subs.add (\r\n        this._login.activateUserPassword (password).subscribe ((res : any) => {\r\n          this.loading = false;\r\n          if (res.status === ApiStatus.ok) {\r\n            if (res.warning === true) {\r\n            this._toast.warning (res.message);\r\n            } else {\r\n            this._toast.success (res.message);\r\n            this._login.forceLogoutPasswordCreate ();\r\n            }\r\n          } else {\r\n            this.title = CreatePasswordConstants.error;\r\n            this.tokenValidation = true;\r\n            if (res[CreatePasswordConstants.message]) {\r\n              this.tokenError = res[CreatePasswordConstants.message];\r\n           } else if (res[CreatePasswordConstants.msg]) {\r\n            this.tokenError = res[CreatePasswordConstants.msg];\r\n           }\r\n          }\r\n        })\r\n      );\r\n      }\r\n    this.resetForm ();\r\n  }\r\n\r\n/**\r\n   * @description To reset the password form\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   */\r\n  resetForm() {\r\n    this.passwordClicked = false;\r\n    this._markFormPristine (this.passwordForm);\r\n    this.loading = false;\r\n  }\r\n\r\n/**\r\n   * @description To mark the form as pristine and untouched\r\n   * @author Joel P Thomas\r\n   * @date 28/09/2021\r\n   * @private\r\n   * @param {(FormGroup | NgForm)} form\r\n   */\r\n  private _markFormPristine(form: FormGroup | NgForm): void {\r\n    this.submitted = false;\r\n    this.passwordForm.reset ({ password: '', confirmPassword: '' });\r\n    Object.keys (form.controls).forEach (control => {\r\n      form.controls[control].markAsPristine ();\r\n      form.controls[control].markAsUntouched ();\r\n    });\r\n  }\r\n\r\n ngOnDestroy() {\r\n    this.subs.unsubscribe ();\r\n  }\r\n}\r\n\r\nexport interface ValidationData {\r\n  id: string;\r\n  value: boolean;\r\n  message: string;\r\n}\r\n","<div class=\"login-box\">\r\n    <div class=\"login-content\">\r\n        <div class=\"auth-box on-sidebar\">\r\n            <div id=\"loginform\" class=\" loginform\">\r\n                <div class=\"login-logo\">\r\n                    <span class=\"db\"><img src=\"assets/images/logo-dark.png\" class=\"login-image\" width=\"150\"\r\n                        alt=\"logo\" /></span>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-12\">\r\n                        <span class=\"login-text\">{{ title | translate }}</span>\r\n                    </div>\r\n                    <ng-container *ngIf=\"tokenValidation && !apiCall\">\r\n\r\n                        <div class=\"col-12 \">\r\n                            <img class=\"error-img\" src=\"{{'assets/images/svg/not-found-icon.svg'}}\" alt=\"auraa\">\r\n                        </div>\r\n                        <div class=\"col-12 \">\r\n                            <div class=\"login-text\">{{tokenError}}</div>\r\n                        </div>\r\n                        <div class=\"col-12 \">\r\n                            <div class=\"login-button\">\r\n                                <button class=\"btn btn-lg btn-login\" (click)=\"login()\">\r\n                            {{ \"Login\" | translate }}\r\n                          </button>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\" apiCall\">\r\n                        <div class=\"col-12 \">\r\n                            <div class=\"loading-spin\">\r\n                                <i class=\"las la-spinner la-3x la-spin\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <div class=\"col-12 \" *ngIf=\"!tokenValidation && !apiCall\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <form [formGroup]=\"passwordForm\" class=\"form-horizontal m-t-20\" id=\"setPasswordform\" autocomplete=\"off\">\r\n                                    <div class=\"form-group mb-13px\">\r\n                                        <label>{{ \"Password\" | translate }}</label>\r\n\r\n                                        <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" (keyup)=\"checkPasswordCompatibility('password')\" autocomplete=\"off\" />\r\n\r\n                                    </div>\r\n                                    <div class=\"form-group \">\r\n                                        <label>{{ \"Confirm Password\" | translate }}</label>\r\n\r\n                                        <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" (keyup)=\"checkPasswordCompatibility('confirmPassword')\" autocomplete=\"off\"\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <div class=\"arrow\" [ngClass]=\"{ 'opacity-1' : passwordClicked ,'opacity-0' : !passwordClicked, 'password' : !confirmPasswordClicked}\">\r\n                                        <div class=\"tooltiptextpassword  \" [ngClass]=\"{ 'password-box' : !confirmPasswordClicked}\">\r\n\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-12\">\r\n                                                    <span> {{passwordMustHaveAMinimumOf | translate}}</span>\r\n                                                </div>\r\n                                                <div class=\"col-md-12\" *ngFor=\"let validator of passwordParameters;let i=index\">\r\n                                                    <div class=\"tooltip-holder\">\r\n                                                        <span class=\"pt-1\">\r\n                        <i class=\"las la-check validationIcon la-2x text-success\" *ngIf=\"validator.value\"></i>\r\n                        <i class=\"las la-times validationIcon la-2x text-danger\" *ngIf=\"!validator.value\"></i>\r\n                        </span>\r\n                                                        <span>\r\n                                            {{ validator.message | translate }}\r\n                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-md-12\" *ngFor=\"let validator of confirmPasswordParameters;let i=index\">\r\n                                                    <div class=\"tooltip-holder\">\r\n                                                        <span class=\"pt-1\">\r\n                          <i class=\"las la-check validationIcon la-2x text-success\" *ngIf=\"validator.value\"></i>\r\n                          <i class=\"las la-times validationIcon la-2x text-danger\" *ngIf=\"!validator.value\"></i>\r\n                        </span>\r\n                                                        <span>\r\n                                                      {{ validator.message | translate }}\r\n                                                  </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group mt-26px\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-bottom\">\r\n                                                    <button *ngIf=\"!loading\" class=\"btn btn-lg btn-login\" type=\"submit\" (click)=\"setPassword()\" [disabled]=\"f.confirmPassword.errors || f.password.errors\">\r\n                        {{ \"Set Password\" | translate }}\r\n                      </button>\r\n                                                    <button disabled *ngIf=\"loading\" class=\"btn btn-lg btn-login\" type=\"submit\">\r\n                        {{ \"Setting Up ...\" | translate }}\r\n                      </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"left-content\">\r\n        <div class=\"img-box\">\r\n            <img src=\"{{'assets/images/auraa-connections.png'}}\" alt=\"auraa\">\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component ({\r\n  selector: 'app-lock',\r\n  templateUrl: './lock.component.html'\r\n})\r\nexport class LockComponent {\r\n  constructor() {}\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"rounded-circle\" width=\"100\" src=\"assets/images/users/1.jpg\"></span>\r\n                <h5 class=\"font-medium m-b-20\">Genelia</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12\">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">LOGIN</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}